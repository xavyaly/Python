# SETS IN PYTHON:	{ }
# REMOVES THE DUPLICATES
# SETS DOENâ€™T SUPPORT REPETITION, SLICING AND INDEXING


>>> s={10,20,30,30,30,'String'}
>>> s
{'String', 10, 20, 30}
>>> 
>>> print(type(s))
<class 'set'>
>>> 
>>> s.update(100)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
>>> 
>>> s.remove(10)
>>> s
{'String', 20, 30}
>>> 
>>> s.remove(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 0
>>> 
>>> s.update([100,200])
>>> s
{100, 200, 'String', 20, 30}
>>> 
>>> f=frozenset(s)
>>> s.update([1000])
>>> s
{100, 200, 1000, 'String', 20, 30}
>>> 
>>> print(f)
frozenset({'String', 100, 20, 200, 30})
>>> 
>>> f
frozenset({'String', 100, 20, 200, 30})
>>> s
{100, 200, 1000, 'String', 20, 30}
>>> 
>>> s.update(10000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
>>> 
>>> s.update([10000])
>>> s
{100, 200, 1000, 'String', 10000, 20, 30}
>>> f.update([2000])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'frozenset' object has no attribute 'update'
>>> 
>>> f
frozenset({'String', 100, 20, 200, 30})
>>> f.remove([100])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'frozenset' object has no attribute 'remove'
>>> 
>>> s
{100, 200, 1000, 'String', 10000, 20, 30}
>>> s.remove([100])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unhashable type: 'list'
>>> 
>>> s.remove(100)
>>> s
{200, 1000, 'String', 10000, 20, 30}
>>> 
