// CONTROL STATEMENTS:

LOOPING:
	WHILE: EXECUTES A TARGET STATEMENTS AS LONG AS A GIVEN CONDITION IS TRUE

SYNTAX:
	WHILE EXPRESSION:
		STATEMENTS(S)


WHILE LOOP:
$ cat test3.py 
#!/usr/bin/python

count=0
while(count<9):
	print("The count will be: ", count)
	count=count+1
print("Leave it...")

O/P:

$ chmod +x test3.py
$ ./test3.py 
('The count will be: ', 0)
('The count will be: ', 1)
('The count will be: ', 2)
('The count will be: ', 3)
('The count will be: ', 4)
('The count will be: ', 5)
('The count will be: ', 6)
('The count will be: ', 7)
('The count will be: ', 8)
Leave it...

OR

// INFINITE LOOP

$ cat test4.py 
#!/usr/bin/python

count=1
while count==1:
	a=input('Enter a no: ')
	print('You have entered: ',a)
print('Leave it...')

O/P:

$ ./test4.py 
Enter a no: 12
('You have entered: ', 12)
Enter a no: 10
('You have entered: ', 10)
Enter a no: 0
('You have entered: ', 0)
Enter a no: 13
('You have entered: ', 13)
Enter a no: 123434
('You have entered: ', 123434)
Enter a no: ^CTraceback (most recent call last):
  File "./test4.py", line 5, in <module>
    a=input('Enter a no: ')
KeyboardInterrupt

OR

// ELSE STATEMENT WITH LOOP

$ cat test5.py 
#!/usr/bin/python

count=0

while count<4:
	print(count, 'is less than 4')
	count=count+1
else:
	print(count, 'is not less than 4')

O/P:

$ ./test5.py 
(0, 'is less than 4')
(1, 'is less than 4')
(2, 'is less than 4')
(3, 'is less than 4')
(4, 'is not less than 4')

OR

// INFINITE LOOP IN WHILE 

$ cat test6.py 
#!/usr/bin/python

flag=1
while (flag):print('Given flag is true!!!')
print('Leave it...')

O/P:

$ ./test6.py
Given flag is true!!!
Given flag is true!!!
Given flag is true!!!
Given flag is true!!!
Given flag is true!!!
Given flag is true!!!
Traceback (most recent call last):
  File "./test6.py", line 4, in <module>
    while (flag):print('Given flag is true!!!')
KeyboardInterrupt

