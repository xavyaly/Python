FUNCTION ARGUMENTS:
	REQUIRED ARGUMENTS

// Number of arguments in the function call should match exactly with the function definition
// You need to pass exactly one argument else it will throw a syntax error

$ cat test2.py 
#!/usr/bin/python

#INITIALIZE THE FUNCTION

def function_name(myList):
	"The cahnges a passed list into this function..."
	print("Print the parameter passed:", myList)
	return

#CALLING THE FUNCTION
function_name();

O/P:

$ ./test2.py 
Traceback (most recent call last):
  File "./test2.py", line 11, in <module>
    function_name();
TypeError: function_name() takes exactly 1 argument (0 given)

OR

// After troubleshoot

$ cat test2.py 
#!/usr/bin/python

#INITIALIZE THE FUNCTION

def function_name(myList):
	"The cahnges a passed list into this function..."
	print("Print the parameter passed:", myList)
	return

#CALLING THE FUNCTION
function_name([2,3,4]);

O/P:

$ ./test2.py 
('Print the parameter passed:', [2, 3, 4])

OR

$ cat test2.py 
#!/usr/bin/python

#INITIALIZE THE FUNCTION

def function_name(myList):
	"The cahnges a passed list into this function..."
	print("Print the parameter passed:", myList)
	return

#CALLING THE FUNCTION
function_name([2,3,4]);

O/P:

$ ./test2.py 
Traceback (most recent call last):
  File "./test2.py", line 11, in <module>
    function_name(2,3,4);
TypeError: function_name() takes exactly 1 argument (3 given)
