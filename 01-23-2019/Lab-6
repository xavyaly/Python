FUNCTION ARGUMENTS:
	VARIABLE-LENGTH ARGUMENTS

// As asterisk(*) is placed before the variable name that holds the values of all non keyword variable arguments
// This will remain empty if no additional arguments are specified during the function call

$ cat test.py 
#!/usr/bin/python

#INITIALIZE THE FUNCTION

def function_name(arg,*vararg):
	"The changes a passed list into this function..."
	print("The Output will be: ", arg)
	return
	
	#USE FOR LOOP
	for var in vararg:
		print(var)

#CALLING THE FUNCTION
function_name(10);

O/P:

$ ./test.py 
('The Output will be: ', 10)


OR

$ cat test.py 
#!/usr/bin/python

#INITIALIZE THE FUNCTION

def function_name(arg,*vararg):
	"The changes a passed list into this function..."
	print("The Output will be: ")
	print(arg)

	#USE FOR LOOP
	for var in vararg:
		print(var)
	return;

#CALLING THE FUNCTION
function_name(10);
function_name(12,13,14,15);

O/P:

$ ./test.py 
The Output will be: 
10
The Output will be: 
12
13
14
15

